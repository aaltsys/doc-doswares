.. _exports:

#############################
DOS WARES Export Mapper
#############################

DOS WARES is capable of writing flat-file and structured exports of individual 
records, selected record cursors, and entire tables (files), using the mapper 
at menu selection :menuselection:`eXchange --> Export-Import --> Exports`.

Three recent improvements to the WARES export mapping capability include:

*  the ability to write transactions in either YAML or JSON format,
*  creating export files by transaction using WARES record keys, and
*  creating transaction export files automatically using database triggers.

Each of these new capabilities is documented following.

JSON and YAML Formats
=============================

The new JSON and YAML formats are enabled by control header settings for
delimiters and preprocess, and special control and value entries in the export 
map details. The following table shows recommended settings for JSON and YAML 
export headings.

+--------------+---------+---------+------------------+
| Entry        | JSON    | YAML    | Char             |
+==============+=========+=========+==================+
| Delim Table  | 0A      | 0A      | \n (NL)          |
+--------------+---------+---------+------------------+
| Delim Row    | 0A      | 0A      | \n (NL)          |
+--------------+---------+---------+------------------+
| Delim Column | 2C      | 2C      | , (comma)        |
+--------------+---------+---------+------------------+
| Delim Value  | 3A20    | 3A20    | : (colon/space)  |
+--------------+---------+---------+------------------+
| Delim Quote  | 22      |         | " (quote)        |
+--------------+---------+---------+------------------+
| Preprocess   | JSON,32 | YAML,9  | 32=space, 9=tab  |
+--------------+---------+---------+------------------+



Transaction Exports
=============================

When the :guilabel:`Export FileName` entry on an export map is left blank, 
selected records will be exported into individual files named by the WARES 
record key. A separate folder or directory should be used for each WARES file 
which is exported, and file system paths should conform to the 8-character 
naming limitations of DOS. Similarly, only the left-most 8 characters of a 
record key will be used as a filename during the export.

Due to the similarity of Report and Process functionality in WARES, transaction 
export commands may be executed as report forms, callable from the report group 
popups within windows and from menus.

Database Trigger Exports
=============================

A new export program has been added to be called from the file posting controls. 
Program :program:`POST_EXPORTDATA` uses the data mapper and definition records 
as previously mentioned, but will perform exports automatically based on file 
system actions. Implement an automatic transaction export as follows.

#. At :menuselection:`Tools --> Define --> Controls` enter a control 
   :guilabel:`Type` of :kbd:`POST` and enter a WARES filename such as 
   :file:`SHIPMENTS` in the :guilabel:`Identifier`. The current posting 
   control will display.
#. Select a location for the export call, and press :kbd:`<Ctrl-N>` to enter a 
   new line. Use the program name :program:`POST_EXPORTDATA`, and an export
   control identifier in the :guilabel:`Branch` column. 
#. Fill in the :guilabel:`Test`, :guilabel:`Value`, and :guilabel:`Occur` 
   entries to determine the rule or condition which will trigger the export.
   For example, *Test=***GT**, *Value=***1**, *Occur=***Always* will write 
   posted transactions and update the exported file with each change.
